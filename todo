* * * * To do * * * *

Includers - update for new formats (create new tag, formfields)

Triggers - get data access triggers working - Display triggers in place

Constants - reduce - Application class

Text Filters - get text filters hooked up to groups and separate HTMLPurifier as an add on option

Registry - "lock" a registry

Install - core, extensions, packages - do this last

Sessions - connect to Symfony's

Token - form tokens

Cache - one of the last things - SIMPLE approach, first using files, then add adapters,
    solution should work for file xml, templates, queries, registries, pages, assets

Modify the Includer logic so that the request object does not have to be first (and therefore can be embedded or not used)

Custom field logic - consider combining the field processing logic in ContentTriger, Controller and CreateModel, etc. Field Class?

* * * Not part of Core / Part of "sample" install * * *

Molajito Theme -

Create a Responsive package (separate from Core since new solutions emerge quickly in this area, don't lock in)

1. Images - http://adaptive-images.com/

2. Video - IFrame trigger

3. Layout Grid

4. Gmaps - http://hpneo.github.com/gmaps/examples/geolocation.html

5. RESS - Server side detection http://www.brettjankord.com/2012/02/29/hrwd-hybrid-responsive-web-design/

6. Client side detection - Modernizer

Mustache package

Twig Package

Admin Theme Package


* * * * Database Code useful during development * * * *

1. Review

Services::Registry()->get('Parameters', '*');


2. add an extension

INSERT INTO `molajo_extensions`
( `id` , `extension_site_id` , `catalog_type_id` , `name`)
VALUES ( 205 ,  '1',  '1150',  'Preferences');

INSERT INTO `molajo_extension_instances` (`id`, `extension_id`, `catalog_type_id`, `title`, `subtitle`, `alias`, `content_text`, `protected`, `featured`, `stickied`, `status`, `start_publishing_datetime`, `stop_publishing_datetime`, `version`, `version_of_id`, `status_prior_to_version`, `created_datetime`, `created_by`, `modified_datetime`, `modified_by`, `checked_out_datetime`, `checked_out_by`, `customfields`, `parameters`, `metadata`, `language`, `translation_of_id`, `ordering`)
SELECT a.id, a.id, a.catalog_type_id, a.name, 'Template', '', '', 1, 0, 0, 1, '2012-07-01 12:00:00', '0000-00-00 00:00:00', 1, 0, 0, '2012-07-01 12:00:00', 0, '2012-07-01 12:00:00', 0, '0000-00-00 00:00:00', 0, '{}', '\r\n{\r\n    "1":{\r\n        "criteria_display_view_on_no_results":"",\r\n        "criteria_snippet_length":"",\r\n        "criteria_extension_instance_id":"",\r\n        "criteria_catalog_type_id":"",\r\n\r\n        "cache":"",\r\n        "cache_time":"",\r\n        "cache_handler":""\r\n    },\r\n        \r\n    "2":{\r\n        "criteria_display_view_on_no_results":"",\r\n        "criteria_snippet_length":"",\r\n        "criteria_extension_instance_id":"",\r\n        "criteria_catalog_type_id":"",\r\n\r\n        "cache":"",\r\n        "cache_time":"",\r\n        "cache_handler":""\r\n    }\r\n}', NULL, 'en-GB', 0, 24
FROM molajo_extensions a
WHERE id = 205;

INSERT INTO  `molajo_site_extension_instances` (  `site_id` ,  `extension_instance_id` )
SELECT a.id, b.id
FROM molajo_sites a, molajo_extension_instances b
WHERE b.id =205;

INSERT INTO  `molajo_application_extension_instances` (  `application_id` ,  `extension_instance_id` )
SELECT a.id, b.id
FROM molajo_applications a, molajo_extension_instances b
WHERE b.id =205;

INSERT INTO molajo_catalog
SELECT NULL, a.catalog_type_id, a.id, b.routable,
'' as menuitem_type, '' as sef_request, 0 as redirect_to_id,
1 as view_group_id, b.primary_category_id, '' as tinyurl
from molajo_extension_instances a,
molajo_catalog_types b
where a.id =  205
and a.catalog_type_id = b.id;

1380 1383

3. remove an extension

delete from `molajo_site_extension_instances` WHERE `extension_instance_id` IN (250, 260);

delete from `molajo_application_extension_instances` WHERE `extension_instance_id` IN (250, 260);

delete from `molajo_catalog_activity` WHERE `catalog_id` IN (27, 28);

delete from `molajo_catalog_categories` WHERE `catalog_id` IN (27, 28);

delete from `molajo_catalog` WHERE `source_id` IN (250, 260) and `catalog_type_id` = 1150;

delete from `molajo_extension_instances` WHERE `id` IN (250, 260);

delete from `molajo_extensions` WHERE `id` IN (250, 260);

4. rebuild security

drop and recreate

CREATE TABLE `molajo_view_group_permissions` (
  `id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `view_group_id` int(11) unsigned NOT NULL COMMENT 'Foreign Key to molajo_groups.id',
  `catalog_id` int(11) unsigned NOT NULL COMMENT 'Foreign Key to molajo_catalog.id',
  `action_id` int(11) unsigned NOT NULL COMMENT 'Foreign Key to molajo_actions.id',
  PRIMARY KEY (`id`),
  KEY `fk_view_group_permissions_view_groups_index` (`view_group_id`),
  KEY `fk_view_group_permissions_actions_index` (`action_id`),
  KEY `fk_view_group_permissions_catalog_index` (`catalog_id`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 AUTO_INCREMENT=1 ;


INSERT INTO `molajo_view_group_permissions` (view_group_id, catalog_id, action_id)

SELECT b.view_group_id, c.id, c.id

FROM `molajo_content` a,
 `molajo_group_view_groups` b,
 `molajo_catalog` c,
 `molajo_actions` d
WHERE a.`catalog_type_id` in (100, 120)
  AND a.id = b.group_id
  AND b.view_group_id = c.view_group_id
  AND d.title = 'view'

Administrator Menu Items
SELECT `id`, `title`, `alias`,
`root`, `parent_id`, `lft`, `rgt`, `lvl`,
`ordering`

FROM `molajo_content`

where `extension_instance_id` = 100
order by parent_id, id


Menu items
SELECT  `id`, `catalog_type_id`, `title`, `subtitle`, `path`, `alias`, `root`, `parent_id`, `lft`, `rgt`, `lvl`, `home`, `parameters`, `ordering`

FROM `molajo_content`
where extension_instance_id = 100
order by lft

breadcrumbs

SELECT  a.`id`, a.`catalog_type_id`, a.`title`, a.`subtitle`, a.`path`, a.`alias`, a.`root`, a.`parent_id`, a.`lft`, a.`rgt`, a.`lvl`, a.`home`, a.`parameters`, a.`ordering`

FROM `molajo_content` a,
molajo_content b
where b.id = 136
and b.lft > a.lft
and b.rgt < a.rgt
order by lft



"   &quot;
'   &apos;
<   &lt;
>   &gt;
&   &amp;
